/*
 * Copyright (C) 2011 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */

task wrapper(type: Wrapper) {
    gradleVersion = '1.8'
}

allprojects {
    group 'org.ros.tf2'
    version = '1.0.2'
}

ext.androidBuildToolsVersion = "17"

subprojects {
    buildscript {
        repositories {
            mavenCentral()
        }
        dependencies {
            classpath 'com.android.tools.build:gradle:0.6.+'
        }
    }

    apply plugin: 'maven'

    repositories {
        mavenLocal()
        maven {
            url 'https://github.com/rosjava/rosjava_mvn_repo/raw/master'
        }
    }
    configurations.add('compile') {
        exclude group: 'junit'
        exclude group: 'xml-apis'
    }



    uploadArchives {
        repositories {
            mavenDeployer {
                repository ( url: 'https://api.bintray.com/content/duanenielsen/maven/tf2_android/' + version )
                { authentication ( 
                    userName : System.getenv('BINTRAY_USER'),
                    password : System.getenv('BINTRAY_KEY')
                  ) 
                }
                snapshotRepository ( url: 'file://' + new File(System.getProperty('user.home'), '.m2/repository').absolutePath )
            }
        }
        println repositories.mavenDeployer.repository.url.value
    }
    task publishToMavenLocal() << {
        description = 'installs .aar files to the local maven repository.'
    }

    afterEvaluate { Project project ->
        if (plugins.findPlugin('android-library')) {
            publishToMavenLocal.dependsOn('uploadArchives')
        }
    }

    //publishing {
     //   publications {
      //    bar(MavenPublication) {
       //     groupId = group
        //    artifactId 'my_artifact'
         //   version '0.1'
          //  artifact("./build/libs/")
    //      }
     //   }
    //  repositories {
     //     maven {
      //      url file://' + new File(System.getProperty('user.home'), '.m2/repository').absolutePath
       //   }
    //  }
    //}

}
