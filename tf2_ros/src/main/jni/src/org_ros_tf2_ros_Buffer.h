/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_ros_tf2_ros_Buffer */

#ifndef _Included_org_ros_tf2_ros_Buffer
#define _Included_org_ros_tf2_ros_Buffer
#ifdef __cplusplus
extern "C" {
#endif

/*
 * Class:     org_ros_tf2_ros_Buffer
 * Method:    newBufferWithCacheDuration
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_org_ros_tf2_1ros_Buffer_newBufferWithCacheDuration
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     org_ros_tf2_ros_Buffer
 * Method:    clear
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_org_ros_tf2_1ros_Buffer_clear
  (JNIEnv *, jobject);

/*
 * Class:     org_ros_tf2_ros_Buffer
 * Method:    setTransform
 * Signature: (Ljava/lang/String;IILjava/lang/String;DDDDDDDLjava/lang/String;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ros_tf2_1ros_Buffer_setTransform
  (JNIEnv *, jobject, jstring, jint, jint, jstring, jdouble, jdouble, jdouble, jdouble, jdouble, jdouble, jdouble, jstring, jboolean);

/*
 * Class:     org_ros_tf2_ros_Buffer
 * Method:    lookupTransform
 * Signature: (Ljava/lang/String;Ljava/lang/String;II)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_org_ros_tf2_1ros_Buffer_lookupTransform__Ljava_lang_String_2Ljava_lang_String_2II
  (JNIEnv *, jobject, jstring, jstring, jint, jint);

/*
 * Class:     org_ros_tf2_ros_Buffer
 * Method:    lookupTransform
 * Signature: (Ljava/lang/String;IILjava/lang/String;IILjava/lang/String;)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_org_ros_tf2_1ros_Buffer_lookupTransform__Ljava_lang_String_2IILjava_lang_String_2IILjava_lang_String_2
  (JNIEnv *, jobject, jstring, jint, jint, jstring, jint, jint, jstring);

/*
 * Class:     org_ros_tf2_ros_Buffer
 * Method:    canTransform
 * Signature: (Ljava/lang/String;Ljava/lang/String;IILjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ros_tf2_1ros_Buffer_canTransform__Ljava_lang_String_2Ljava_lang_String_2IILjava_lang_String_2
  (JNIEnv *, jobject, jstring, jstring, jint, jint, jstring);

/*
 * Class:     org_ros_tf2_ros_Buffer
 * Method:    canTransform
 * Signature: (Ljava/lang/String;IILjava/lang/String;IILjava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_org_ros_tf2_1ros_Buffer_canTransform__Ljava_lang_String_2IILjava_lang_String_2IILjava_lang_String_2Ljava_lang_String_2
  (JNIEnv *, jobject, jstring, jint, jint, jstring, jint, jint, jstring, jstring);

/*
 * Class:     org_ros_tf2_ros_Buffer
 * Method:    allFramesAsYAML
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ros_tf2_1ros_Buffer_allFramesAsYAML
  (JNIEnv *, jobject);

/*
 * Class:     org_ros_tf2_ros_Buffer
 * Method:    allFramesAsString
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_ros_tf2_1ros_Buffer_allFramesAsString
  (JNIEnv *, jobject);

/*
 * Class:     org_ros_tf2_ros_Buffer
 * Method:    getNativeCacheLength
 * Signature: ()[I
 */
JNIEXPORT jintArray JNICALL Java_org_ros_tf2_1ros_Buffer_getNativeCacheLength
  (JNIEnv *, jobject);

/*
 * Class:     org_ros_tf2_ros_Buffer
 * Method:    loadPR2Tree
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_org_ros_tf2_1ros_Buffer_loadPR2Tree
  (JNIEnv *, jobject);

/*
 * Class:     org_ros_tf2_ros_Buffer
 * Method:    getPR2FrameIds
 * Signature: ()[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_org_ros_tf2_1ros_Buffer_getPR2FrameIds
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif

